service: killerapp-serverless

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or falls back to what we have set in the provider section.
  stage: ${opt:stage, 'offline'}
  region: ${opt:region, 'us-east-1'}
  bundle:
    linting: false
    excludeFiles: "**/*.test.ts"
    externals:
      - "@prisma/client"
    copyFiles:
      - from: "prisma/schema.prisma"
        to: "./"
    packagerOptions:
      scripts:
        - prisma generate && rimraf node_modules/@prisma/engines/** && rimraf node_modules/prisma/libquery_engine-[^rhel]* && prisma db push
  serverless-offline:
    httpPort: 4000
    noPrependStageInUrl: true
    reloadHandler: true

provider:
  name: aws
  runtime: nodejs14.x
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    NODE_OPTIONS: --enable-source-maps --stack-trace-limit=1000 --experimental-modules --es-module-specifier-resolution=node
  memorySize: 512
  timeout: 30
  logRetentionInDays: 90
  logs:
    httpApi: true
  httpApi:
    # metrics: true # Enable if you need
    cors: true

functions:
  app:
    handler: src/handler.handler
    url:
      cors: true
    # reservedConcurrency: 100
    events:
      - httpApi:
          path: "/{proxy+}"
          method: "*"
      - httpApi: 
          path: "/users"
          method: "*"

package:
  individually: true

plugins:
  - serverless-dotenv-plugin
  - serverless-bundle
  - serverless-offline
